{"version":3,"file":"static/js/415.f8104bdd.chunk.js","mappings":"mQAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAKkBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,sBAA2C,CAChEG,OAAQA,IANL,cAKCI,EALD,yBAQEA,EAASC,MARX,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,kGAA6BC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,MACvCR,EAAS,CACbC,QAASH,EACTU,MAAOA,EACPN,SAAU,QACVO,eAAe,GALZ,SAOkBN,EAAAA,EAAAA,IAAA,UAAaN,EAAb,gBAAqC,CAC1Da,OAAQH,EAAUG,OAClBV,OAAQA,IATL,cAOCI,EAPD,yBAWEA,EAASC,MAXX,kEAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,+FAAmCJ,EAAnC,EAAmCA,UAAWK,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,WACtDb,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,KAMGW,EANH,OAOE,UAPF,OAUE,SAVF,OAaE,YAbF,8BAQDC,EAAQ,UAAMjB,EAAN,kBAAwBe,GAR/B,mCAWDE,EAAQ,UAAMjB,EAAN,kBAAwBe,EAAxB,YAXP,mCAcDE,EAAQ,UAAMjB,EAAN,kBAAwBe,EAAxB,YAdP,gFAmBkBT,EAAAA,EAAAA,IAAUW,EAAU,CACzCJ,OAAQH,EAAUG,OAClBV,OAAQA,IArBL,eAmBCI,EAnBD,yBAuBEA,EAASC,MAvBX,mE,8GC7BMU,EAAUC,EAAAA,EAAAA,QAAH,0CAIPC,EAAeD,EAAAA,EAAAA,GAAH,+CAGZE,EAAOF,EAAAA,EAAAA,GAAH,oIAOJG,EAAOH,EAAAA,EAAAA,GAAH,yCAGJI,EAAUJ,EAAAA,EAAAA,IAAH,2GAKPK,EAAQL,EAAAA,EAAAA,EAAH,yC,SCSlB,MApBA,YAAqD,IAAzBM,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACV,EAAD,WACGQ,IAAgB,SAACN,EAAD,UAAeM,KAChC,SAACL,EAAD,UACGI,EAAOI,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACV,EAAD,WACE,UAAC,KAAD,CAAMW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACCK,IAAe,SAACT,EAAD,CAASa,IAZpB,kCAYsCJ,EAAaK,IAAKN,KAC3D,SAACP,EAAD,UAAQO,QAHDD,EAOd,QAIR,C,6ICID,UA5BA,WACE,OAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,UAG2BtC,EAAAA,EAAAA,MAH3B,OAGUK,EAHV,OAIImC,EAAenC,EAASqC,SAJ5B,mDAMuB,iBAAf,KAAMC,KANd,0CAOaC,EAAAA,GAAAA,KAAA,gCAPb,yBAUIN,GAAa,GAVjB,6EADc,uBAAC,WAAD,wBAcdO,EACD,GAAE,KAED,iCACE,SAAC,IAAD,CAAkBtB,OAAQgB,EAAaf,aAAc,mBACpDa,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,CAAgBS,UAAW,QAGhC,C","sources":["api/movies.js","components/MoviesCollection/MoviesCollection.styled.jsx","components/MoviesCollection/MoviesCollection.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6455853a1d19428276a493b9a96f5669';\n\nexport async function fetchTrendMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovies({ abortCtrl, query }) {\n  const params = {\n    api_key: API_KEY,\n    query: query,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails({ abortCtrl, movieId, fetchField }) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  let endPoint;\n  switch (fetchField) {\n    case 'movie':\n      endPoint = `${BASE_URL}/movie/${movieId}`;\n      break;\n    case 'cast':\n      endPoint = `${BASE_URL}/movie/${movieId}/credits`;\n      break;\n    case 'reviews':\n      endPoint = `${BASE_URL}/movie/${movieId}/reviews`;\n      break;\n    default:\n      return;\n  }\n  const response = await axios.get(endPoint, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}","import styled from '@emotion/styled';\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  padding: 16px 30px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 20px;\n`;\nexport const Item = styled.li`\n  width: 150px;\n`;\nexport const Picture = styled.img`\n  width: 150px;\n  height: 225px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;\nexport const Title = styled.p`\n  padding: 6px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Section,\n  SectionTitle,\n  List,\n  Item,\n  Picture,\n  Title,\n} from './MoviesCollection.styled';\n\nconst IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesCollection({ movies, sectionTitle }) {\n  const location = useLocation();\n  return (\n    <Section>\n      {sectionTitle && <SectionTitle>{sectionTitle}</SectionTitle>}\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n              {poster_path && <Picture src={IMAGES_URL + poster_path} alt={title} />}\n                <Title>{title}</Title>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Section>\n  );\n}\nexport default MoviesCollection;","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchTrendMovies } from 'api/movies';\nimport MoviesCollection from 'components/MoviesCollection/MoviesCollection';\n\nfunction Home() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    async function loadTrendMovies() {\n      try {\n        setIsLoading(true);\n        const response = await fetchTrendMovies();\n        setTrendMovies(response.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          return toast.warn(`Oops, something went wrong.`);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadTrendMovies();\n  }, []);\n  return (\n    <>\n      <MoviesCollection movies={trendMovies} sectionTitle={'Trending Today'} />\n      {isLoading && <Loader />}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\nexport default Home;"],"names":["BASE_URL","API_KEY","fetchTrendMovies","params","api_key","language","axios","response","data","fetchMovies","abortCtrl","query","include_adult","signal","fetchMovieDetails","movieId","fetchField","endPoint","Section","styled","SectionTitle","List","Item","Picture","Title","movies","sectionTitle","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","useState","isLoading","setIsLoading","trendMovies","setTrendMovies","useEffect","results","code","toast","loadTrendMovies","autoClose"],"sourceRoot":""}