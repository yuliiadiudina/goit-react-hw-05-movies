{"version":3,"file":"static/js/291.f8463da4.chunk.js","mappings":"mQAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAKkBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,sBAA2C,CAChEG,OAAQA,IANL,cAKCI,EALD,yBAQEA,EAASC,MARX,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,kGAA6BC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,MACvCR,EAAS,CACbC,QAASH,EACTU,MAAOA,EACPN,SAAU,QACVO,eAAe,GALZ,SAOkBN,EAAAA,EAAAA,IAAA,UAAaN,EAAb,gBAAqC,CAC1Da,OAAQH,EAAUG,OAClBV,OAAQA,IATL,cAOCI,EAPD,yBAWEA,EAASC,MAXX,kEAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,+FAAmCJ,EAAnC,EAAmCA,UAAWK,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,WACtDb,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,KAMGW,EANH,OAOE,UAPF,OAUE,SAVF,OAaE,YAbF,8BAQDC,EAAQ,UAAMjB,EAAN,kBAAwBe,GAR/B,mCAWDE,EAAQ,UAAMjB,EAAN,kBAAwBe,EAAxB,YAXP,mCAcDE,EAAQ,UAAMjB,EAAN,kBAAwBe,EAAxB,YAdP,gFAmBkBT,EAAAA,EAAAA,IAAUW,EAAU,CACzCJ,OAAQH,EAAUG,OAClBV,OAAQA,IArBL,eAmBCI,EAnBD,yBAuBEA,EAASC,MAvBX,mE,iMC7BMU,EAAOC,EAAAA,EAAAA,GAAH,qGAMJC,EAAOD,EAAAA,EAAAA,EAAH,kL,SC4DjB,MA3DA,WACE,IAAMT,GAAYW,EAAAA,EAAAA,UACVN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,YAAxC,eAAOG,EAAP,KAAqBC,EAArB,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACMlB,EAAUmB,SACZnB,EAAUmB,QAAQC,QAEpBpB,EAAUmB,QAAU,IAAIE,gBAJ1B,SAMIN,GAAa,GANjB,UAO2BX,EAAAA,EAAAA,IAAkB,CACvCJ,UAAAA,EACAK,QAAAA,EACAC,WAAY,YAVlB,OAOUT,EAPV,OAYIoB,EAAgBpB,EAASyB,SAZ7B,qDAcuB,iBAAf,KAAMC,KAdd,0CAeaC,EAAAA,GAAAA,KAAA,gCAfb,yBAkBIT,GAAa,GAlBjB,8EADc,uBAAC,WAAD,wBAsBdU,EACD,GAAE,CAACpB,KAGF,UAACG,EAAD,WACGQ,GACCA,EAAaU,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAIvC,OAHID,EAAQE,OAAS,MACnBF,EAAUA,EAAQG,MAAM,EAAG,KAAO,QAGlC,2BACE,0CAAgBJ,MAChB,uBAAIC,IACHA,EAAQE,OAAS,MAChB,SAACrB,EAAD,CAAMuB,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAArC,iCAJKR,EAUZ,IACFX,IAAiBA,EAAae,SAC7B,gEAEDjB,IAAa,SAACsB,EAAA,EAAD,KACd,SAAC,KAAD,CAAgBC,UAAW,QAGhC,C","sources":["api/movies.js","components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6455853a1d19428276a493b9a96f5669';\n\nexport async function fetchTrendMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovies({ abortCtrl, query }) {\n  const params = {\n    api_key: API_KEY,\n    query: query,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails({ abortCtrl, movieId, fetchField }) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  let endPoint;\n  switch (fetchField) {\n    case 'movie':\n      endPoint = `${BASE_URL}/movie/${movieId}`;\n      break;\n    case 'cast':\n      endPoint = `${BASE_URL}/movie/${movieId}/credits`;\n      break;\n    case 'reviews':\n      endPoint = `${BASE_URL}/movie/${movieId}/reviews`;\n      break;\n    default:\n      return;\n  }\n  const response = await axios.get(endPoint, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const Link = styled.a`\n  display: inline-block;\n  margin: 6px;\n  padding: 5px;\n  border-radius: 20px;\n  font-size: 12px;\n  text-align: center;\n  color: rgb(255, 109, 0);\n`;","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovieDetails } from 'api/movies';\nimport { List, Link } from './MovieReviews.styled';\n\nfunction MovieReviews() {\n  const abortCtrl = useRef();\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReviews, setMovieReviews] = useState();\n\n  useEffect(() => {\n    async function loadMovieReviews() {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n      abortCtrl.current = new AbortController();\n      try {\n        setIsLoading(true);\n        const response = await fetchMovieDetails({\n          abortCtrl,\n          movieId,\n          fetchField: 'reviews',\n        });\n        setMovieReviews(response.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          return toast.warn(`Oops, something went wrong.`);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadMovieReviews();\n  }, [movieId]);\n\n  return (\n    <List>\n      {movieReviews &&\n        movieReviews.map(({ id, author, content, url }) => {\n          if (content.length > 500) {\n            content = content.slice(0, 500) + '...';\n          }\n          return (\n            <li key={id}>\n              <h4>{`Author: ${author}`}</h4>\n              <p>{content}</p>\n              {content.length > 500 && (\n                <Link href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n                  Read full article\n                </Link>\n              )}\n            </li>\n          );\n        })}\n      {movieReviews && !movieReviews.length && (\n        <p>There are no reviews for this movie.</p>\n      )}\n      {isLoading && <Loader />}\n      <ToastContainer autoClose={3000} />\n    </List>\n  );\n}\n\nexport default MovieReviews;"],"names":["BASE_URL","API_KEY","fetchTrendMovies","params","api_key","language","axios","response","data","fetchMovies","abortCtrl","query","include_adult","signal","fetchMovieDetails","movieId","fetchField","endPoint","List","styled","Link","useRef","useParams","useState","isLoading","setIsLoading","movieReviews","setMovieReviews","useEffect","current","abort","AbortController","results","code","toast","loadMovieReviews","map","id","author","content","url","length","slice","href","target","rel","Loader","autoClose"],"sourceRoot":""}